// <auto-generated />

namespace JSLintNet.UI.ViewModels
{
    internal partial class SettingsViewModel : ViewModelBase
    {
        public virtual bool? RunOnSave
        {
            get
            {
                return this.Model.RunOnSave;
            }

            set
            {
                this.Model.RunOnSave = value;

                this.RaisePropertyChanged("RunOnSave");
            }
        }

        public virtual bool? RunOnBuild
        {
            get
            {
                return this.Model.RunOnBuild;
            }

            set
            {
                this.Model.RunOnBuild = value;

                this.RaisePropertyChanged("RunOnBuild");
            }
        }

        public virtual bool? CancelBuild
        {
            get
            {
                return this.Model.CancelBuild;
            }

            set
            {
                this.Model.CancelBuild = value;

                this.RaisePropertyChanged("CancelBuild");
            }
        }

        public virtual string ErrorLimit
        {
            get
            {
                var nullable = this.Model.ErrorLimit;

                return nullable.HasValue ? nullable.ToString() : null;
            }

            set
            {
                this.Model.ErrorLimit = ParseIntFromString(value);

                this.RaisePropertyChanged("ErrorLimit");
            }
        }

        public virtual string FileLimit
        {
            get
            {
                var nullable = this.Model.FileLimit;

                return nullable.HasValue ? nullable.ToString() : null;
            }

            set
            {
                this.Model.FileLimit = ParseIntFromString(value);

                this.RaisePropertyChanged("FileLimit");
            }
        }

        public virtual bool? TolerateBitwiseOperators
        {
            get
            {
                return this.Model.Options.TolerateBitwiseOperators;
            }

            set
            {
                this.Model.Options.TolerateBitwiseOperators = value;

                this.RaisePropertyChanged("TolerateBitwiseOperators");
            }
        }

        public virtual bool? AssumeBrowser
        {
            get
            {
                return this.Model.Options.AssumeBrowser;
            }

            set
            {
                this.Model.Options.AssumeBrowser = value;

                this.RaisePropertyChanged("AssumeBrowser");
            }
        }

        public virtual bool? AssumeCouchDB
        {
            get
            {
                return this.Model.Options.AssumeCouchDB;
            }

            set
            {
                this.Model.Options.AssumeCouchDB = value;

                this.RaisePropertyChanged("AssumeCouchDB");
            }
        }

        public virtual bool? AssumeInDevelopment
        {
            get
            {
                return this.Model.Options.AssumeInDevelopment;
            }

            set
            {
                this.Model.Options.AssumeInDevelopment = value;

                this.RaisePropertyChanged("AssumeInDevelopment");
            }
        }

        public virtual bool? AssumeES6
        {
            get
            {
                return this.Model.Options.AssumeES6;
            }

            set
            {
                this.Model.Options.AssumeES6 = value;

                this.RaisePropertyChanged("AssumeES6");
            }
        }

        public virtual bool? TolerateEval
        {
            get
            {
                return this.Model.Options.TolerateEval;
            }

            set
            {
                this.Model.Options.TolerateEval = value;

                this.RaisePropertyChanged("TolerateEval");
            }
        }

        public virtual bool? TolerateForStatement
        {
            get
            {
                return this.Model.Options.TolerateForStatement;
            }

            set
            {
                this.Model.Options.TolerateForStatement = value;

                this.RaisePropertyChanged("TolerateForStatement");
            }
        }

        public virtual string MaximumErrors
        {
            get
            {
                var nullable = this.Model.Options.MaximumErrors;

                return nullable.HasValue ? nullable.ToString() : null;
            }

            set
            {
                this.Model.Options.MaximumErrors = ParseIntFromString(value);

                this.RaisePropertyChanged("MaximumErrors");
            }
        }

        public virtual string MaximumLineLength
        {
            get
            {
                var nullable = this.Model.Options.MaximumLineLength;

                return nullable.HasValue ? nullable.ToString() : null;
            }

            set
            {
                this.Model.Options.MaximumLineLength = ParseIntFromString(value);

                this.RaisePropertyChanged("MaximumLineLength");
            }
        }

        public virtual bool? AssumeNode
        {
            get
            {
                return this.Model.Options.AssumeNode;
            }

            set
            {
                this.Model.Options.AssumeNode = value;

                this.RaisePropertyChanged("AssumeNode");
            }
        }

        public virtual bool? TolerateThis
        {
            get
            {
                return this.Model.Options.TolerateThis;
            }

            set
            {
                this.Model.Options.TolerateThis = value;

                this.RaisePropertyChanged("TolerateThis");
            }
        }

        public virtual bool? TolerateMessyWhitespace
        {
            get
            {
                return this.Model.Options.TolerateMessyWhitespace;
            }

            set
            {
                this.Model.Options.TolerateMessyWhitespace = value;

                this.RaisePropertyChanged("TolerateMessyWhitespace");
            }
        }
    }
}
